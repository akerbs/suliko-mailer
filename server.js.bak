const bodyParser = require("body-parser");
const express = require("express");
const nodemailer = require("nodemailer");
require("dotenv").config();

// const cors = require("cors");
// app.use(cors());

// const env = process.env.NODE_ENV || "production";

const PORT = process.env.PORT || 3000;

const server = express();
// server.use(express.static('public'));
server.use(express.json());
// server.use(bodyParser.urlencoded({ extended: false }));
const urlencodedParser = bodyParser.urlencoded({ extended: false });

let transporter = nodemailer.createTransport(
  {
    service: "Gmail",
    auth: {
      type: "OAuth2",
      user: process.env.EMAIL,
      refreshToken: process.env.EMAIL_REFRESH_TOKEN,
      clientId: process.env.EMAIL_CLIENT_ID,
      clientSecret: process.env.EMAIL_CLIENT_SECRET,
    },
  },
  {
    from: `Mailer Test <${process.env.EMAIL}>`,
  }
);

transporter.verify((error, success) => {
  if (error) return console.log(error);
  console.log("Server is ready to take our messages: ", success);
  transporter.on("token", (token) => {
    console.log("A new access token was generated");
    console.log("User: %s", token.user);
    console.log("Access Token: %s", token.accessToken);
    console.log("Expires: %s", new Date(token.expires));
  });
});

server.get("/", (req, res) => {
  res.send("Hello, Mr. AK!");
});

server.post("/reservation", urlencodedParser, function (req, res) {
  

  const msgToAdmin = `<p style='font-weight:bold;'> Table reservation! ðŸ™‚ <br/>
People: ${req.body.peopleCount}<br/>
Date: ${req.body.date}<br/>
Time: ${req.body.time}<br/>
Name: ${req.body.name}<br/>
Phone: ${req.body.phone}<br/>
Email: ${req.body.email}</p>`;

  const msgToClient = `<p style='font-weight:bold;'> Thank U! Table reservation was successful! ðŸ™‚ <br/>
  People: ${req.body.peopleCount}<br/>
  Date: ${req.body.date}<br/>
  Time: ${req.body.time}<br/>
  Name: ${req.body.name}<br/>
  Phone: ${req.body.phone}<br/>
  Email: ${req.body.email}</p>`;

  if (!req.body) return res.sendStatus(400);
  console.log(req.body);

  // email to Client of Restourant
  transporter.sendMail(
    {
      // from: process.env.GMAIL_ADDRESS,
      to: req.body.email,
      subject: "Table reservation in Suliko",
      html: msgToClient,
    },
    function (err, info) {
      if (err) return res.status(500).send(err);
      // res.json({ success: true });
    }
  );
  // email to Admin of Restourant
  transporter.sendMail(
    {
      // from: process.env.GMAIL_ADDRESS,
      to: "anker2702@gmail.com", // emailOfRestourantsAdmin
      subject: "Reservierung",
      html: msgToAdmin,
    },
    function (err, info) {
      if (err) return res.status(500).send(err);
      // res.json({ success: true });
      res
        .status(200)
        // .send("OK!");
        .redirect("https://suliko.vercel.app");
    }
  );
});

server.listen(PORT, () => {
  console.log(`Listening on port ${PORT}`);
});

// https://suliko.vercel.app/deu
